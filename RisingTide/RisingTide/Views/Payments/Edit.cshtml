@model RisingTide.Models.ScheduledPayment
@{
    ViewBag.Title = "Edit";
}
<h2>
    Edit</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(function () {
        RISINGTIDE.editPaymentSetup();
    });
</script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>ScheduledPayment</legend>
        @Html.HiddenFor(model => model.Id)
        <div class="editor-label">
            @Html.LabelFor(model => model.IsDeleted)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsDeleted)
            @Html.ValidationMessageFor(model => model.IsDeleted)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Amount)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Amount)
            @Html.ValidationMessageFor(model => model.Amount)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.UserId, "User")
        </div>
        <div class="editor-field">
            @Html.DropDownList("UserId", String.Empty)
            @Html.ValidationMessageFor(model => model.UserId)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.DueDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DueDate)
            @Html.ValidationMessageFor(model => model.DueDate)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.PayOnDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PayOnDate)
            @Html.ValidationMessageFor(model => model.PayOnDate)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Subject)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Subject)
            @Html.ValidationMessageFor(model => model.Subject)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.RecurrenceId, "Recurrence")
        </div>
        <div class="editor-field">
            @Html.DropDownList("RecurrenceId", String.Empty)
            @Html.ValidationMessageFor(model => model.RecurrenceId)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.PaymentTypeId, "PaymentType")
        </div>
        <div class="editor-field">
            @Html.DropDownList("PaymentTypeId", String.Empty)
            @Html.ValidationMessageFor(model => model.PaymentTypeId)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.IncludeInCashFlowAnalysis)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IncludeInCashFlowAnalysis)
            @Html.ValidationMessageFor(model => model.IncludeInCashFlowAnalysis)
        </div>
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
